/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hostel.management.system;

import java.awt.Color;
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author HP
 */
public class Room extends javax.swing.JPanel {
    private Connection con;
    private Statement st;
    private ResultSet rs;
    private PreparedStatement ps;

    /**
     * Creates new form Room
     */
    public Room() {
        initComponents();
        studentId = new ArrayList<String>();
        loadStudent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        student = new javax.swing.JComboBox();
        passport = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        hostel = new javax.swing.JComboBox();
        room = new javax.swing.JComboBox();
        location = new javax.swing.JTextField();
        desc = new javax.swing.JTextField();
        price = new javax.swing.JTextField();
        rent = new javax.swing.JSpinner();
        reset = new javax.swing.JLabel();
        allot = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        container = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 51, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ALLOT AVAILABLE ROOM TO STUDENT");

        student.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Student Id......." }));
        student.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                itemSelected(evt);
            }
        });

        passport.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        passport.setMaximumSize(new java.awt.Dimension(120, 120));
        passport.setMinimumSize(new java.awt.Dimension(120, 120));
        passport.setPreferredSize(new java.awt.Dimension(120, 120));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 102, 0));
        jLabel3.setText("AVAILABLE HOSTEL");
        jLabel3.setMaximumSize(new java.awt.Dimension(200, 25));
        jLabel3.setMinimumSize(new java.awt.Dimension(200, 25));
        jLabel3.setPreferredSize(new java.awt.Dimension(150, 25));

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 102, 0));
        jLabel4.setText("HOSTEL LOCATION");
        jLabel4.setMaximumSize(new java.awt.Dimension(200, 25));
        jLabel4.setMinimumSize(new java.awt.Dimension(200, 25));
        jLabel4.setPreferredSize(new java.awt.Dimension(150, 25));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 102, 0));
        jLabel5.setText("HOSTEL DESCRIPTION");
        jLabel5.setMaximumSize(new java.awt.Dimension(200, 25));
        jLabel5.setMinimumSize(new java.awt.Dimension(200, 25));
        jLabel5.setPreferredSize(new java.awt.Dimension(150, 25));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 102, 0));
        jLabel7.setText("AVAILABLE ROOM");
        jLabel7.setMaximumSize(new java.awt.Dimension(200, 25));
        jLabel7.setMinimumSize(new java.awt.Dimension(200, 25));
        jLabel7.setPreferredSize(new java.awt.Dimension(150, 25));

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 102, 0));
        jLabel8.setText("ROOM PRICE");
        jLabel8.setMaximumSize(new java.awt.Dimension(200, 25));
        jLabel8.setMinimumSize(new java.awt.Dimension(200, 25));
        jLabel8.setPreferredSize(new java.awt.Dimension(150, 25));

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 102, 0));
        jLabel9.setText("PAY RENT FOR");
        jLabel9.setMaximumSize(new java.awt.Dimension(200, 25));
        jLabel9.setMinimumSize(new java.awt.Dimension(200, 25));
        jLabel9.setPreferredSize(new java.awt.Dimension(150, 25));

        hostel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "select hostel" }));
        hostel.setPreferredSize(new java.awt.Dimension(120, 25));
        hostel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                itemSelected(evt);
            }
        });

        room.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "select room" }));
        room.setPreferredSize(new java.awt.Dimension(120, 25));

        location.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        location.setForeground(new java.awt.Color(0, 0, 0));
        location.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        location.setEnabled(false);
        location.setMaximumSize(new java.awt.Dimension(120, 25));
        location.setMinimumSize(new java.awt.Dimension(120, 25));
        location.setPreferredSize(new java.awt.Dimension(120, 25));

        desc.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        desc.setForeground(new java.awt.Color(0, 0, 0));
        desc.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        desc.setEnabled(false);
        desc.setMaximumSize(new java.awt.Dimension(120, 25));
        desc.setMinimumSize(new java.awt.Dimension(120, 25));
        desc.setPreferredSize(new java.awt.Dimension(120, 25));

        price.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        price.setForeground(new java.awt.Color(0, 0, 0));
        price.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        price.setEnabled(false);
        price.setMaximumSize(new java.awt.Dimension(120, 25));
        price.setMinimumSize(new java.awt.Dimension(120, 25));
        price.setPreferredSize(new java.awt.Dimension(120, 25));

        rent.setMaximumSize(new java.awt.Dimension(120, 25));
        rent.setMinimumSize(new java.awt.Dimension(120, 25));
        rent.setPreferredSize(new java.awt.Dimension(120, 25));

        reset.setBackground(new java.awt.Color(255, 204, 153));
        reset.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        reset.setForeground(new java.awt.Color(0, 0, 0));
        reset.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        reset.setText("RESET");
        reset.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204)));
        reset.setMaximumSize(new java.awt.Dimension(100, 25));
        reset.setMinimumSize(new java.awt.Dimension(100, 25));
        reset.setOpaque(true);
        reset.setPreferredSize(new java.awt.Dimension(100, 25));
        reset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Room.this.mouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Room.this.mouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Room.this.mouseExited(evt);
            }
        });

        allot.setBackground(new java.awt.Color(255, 204, 153));
        allot.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        allot.setForeground(new java.awt.Color(0, 0, 0));
        allot.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        allot.setText("ALLOT ROOM");
        allot.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204)));
        allot.setMaximumSize(new java.awt.Dimension(100, 25));
        allot.setMinimumSize(new java.awt.Dimension(100, 25));
        allot.setOpaque(true);
        allot.setPreferredSize(new java.awt.Dimension(100, 25));
        allot.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Room.this.mouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Room.this.mouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Room.this.mouseExited(evt);
            }
        });

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "AVAILABLE ROOMS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 1, 14), new java.awt.Color(204, 51, 0))); // NOI18N

        container.setLayout(new java.awt.GridBagLayout());

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 51, 0));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("S/N");
        jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204)));
        jLabel10.setMaximumSize(new java.awt.Dimension(50, 25));
        jLabel10.setMinimumSize(new java.awt.Dimension(50, 25));
        jLabel10.setPreferredSize(new java.awt.Dimension(50, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        container.add(jLabel10, gridBagConstraints);

        jLabel18.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(204, 51, 0));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("ROOM ID");
        jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204)));
        jLabel18.setMaximumSize(new java.awt.Dimension(100, 25));
        jLabel18.setMinimumSize(new java.awt.Dimension(100, 25));
        jLabel18.setPreferredSize(new java.awt.Dimension(100, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        container.add(jLabel18, gridBagConstraints);

        jLabel19.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(204, 51, 0));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("HOSTEL NAME");
        jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204)));
        jLabel19.setMaximumSize(new java.awt.Dimension(180, 25));
        jLabel19.setMinimumSize(new java.awt.Dimension(180, 25));
        jLabel19.setPreferredSize(new java.awt.Dimension(180, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        container.add(jLabel19, gridBagConstraints);

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(204, 51, 0));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("LOCATION");
        jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204)));
        jLabel13.setMaximumSize(new java.awt.Dimension(180, 25));
        jLabel13.setMinimumSize(new java.awt.Dimension(180, 25));
        jLabel13.setPreferredSize(new java.awt.Dimension(180, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        container.add(jLabel13, gridBagConstraints);

        jLabel14.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(204, 51, 0));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("PRICE");
        jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204)));
        jLabel14.setMaximumSize(new java.awt.Dimension(100, 25));
        jLabel14.setMinimumSize(new java.awt.Dimension(100, 25));
        jLabel14.setPreferredSize(new java.awt.Dimension(100, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        container.add(jLabel14, gridBagConstraints);

        jScrollPane1.setViewportView(container);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 102, 0));
        jLabel2.setText("MONTH(S)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(passport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(student, 0, 1, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(desc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hostel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rent, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(room, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(130, 130, 130)
                        .addComponent(allot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(student, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hostel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(room, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passport, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(desc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(allot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE))
        );

        SpinnerModel model = new SpinnerNumberModel(12,6, 60, 6);
        rent.setModel(model);
    }// </editor-fold>//GEN-END:initComponents

    private void itemSelected(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_itemSelected
        // TODO add your handling code here:
        try {
            //add details to db
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hostel", "root", "");
            st = con.createStatement();
            
            if(evt.getSource() == student)
            {
                rs = st.executeQuery("SELECT image FROM students WHERE student_id ='" + student.getSelectedItem().toString()+"'");
                
                while(rs.next())
                {
                    Image im = getToolkit().createImage(rs.getString(1));
                    im = im.getScaledInstance(120, 120, Image.SCALE_SMOOTH);
                    passport.setIcon(new ImageIcon(im));
                }
            }
            else if(evt.getSource() == hostel)
            {
                rs = st.executeQuery("SELECT hostel_id FROM hostel WHERE name ='" +hostel.getSelectedItem().toString() + "'");
                
                String ht = "null";
                while(rs.next())
                    ht = rs.getString(1);
                
                rs = st.executeQuery("SELECT address,price,description FROM hostel WHERE name ='" + hostel.getSelectedItem().toString()+"'");
                if(rs.next())
                {
                    location.setText(rs.getString(1));
                    desc.setText(rs.getString(3));
                    price.setText(rs.getString(2));
                }
                else
                {
                    location.setText("");
                    desc.setText("");
                    price.setText("");
                }
                
                rs = st.executeQuery("SELECT room_id FROM rooms WHERE hostel_id ='" + ht+ "' AND status = 'available'");
                
                if(rs.next())
                {
                    room.removeAllItems();
                    room.addItem("select room");
                    rs.previous();
                    while(rs.next())
                    {
                        room.addItem(rs.getString(1));
                    }
                
                } else {
                    if(hostel.getSelectedIndex() !=0){
                        hostel.setSelectedIndex(0);
                        room.removeAllItems();
                        room.addItem("select room");
                        JOptionPane.showMessageDialog(this, "No Vacant room for the selected Hostel\nChoose another availabel hostel");
                    }
                }
                

            }
        }catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_itemSelected

    private void mouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseClicked
        // TODO add your handling code here:
        if(evt.getSource() == allot)
        {
            //last line
            if(student.getSelectedIndex() != 0)
            {
                if(hostel.getSelectedIndex() !=0)
                {
                    if(room.getSelectedIndex() != 0)
                    {
                        try {
                            ps = con.prepareStatement("INSERT INTO room_alloc VALUES(?,?,?,?)");
                            
                            GregorianCalendar calendar = new GregorianCalendar();
                            String date = calendar.get(Calendar.YEAR) + "/" + calendar.get(Calendar.MONTH) + "/" + calendar.get(Calendar.DAY_OF_MONTH);
                            calendar.add(Calendar.MONTH, Integer.parseInt(rent.getValue().toString()));
                            String due = calendar.get(Calendar.YEAR) + "/" + calendar.get(Calendar.MONTH) + "/" + calendar.get(Calendar.DAY_OF_MONTH);
                            ps.setString(1, student.getSelectedItem().toString());
                            ps.setString(2, room.getSelectedItem().toString());
                            ps.setString(3, date);
                            ps.setString(4, due);

                            int b = ps.executeUpdate();

                            ps = con.prepareStatement("UPDATE rooms SET status='occupied' WHERE room_id ='"+ room.getSelectedItem().toString() + "'");

                            int c = ps.executeUpdate();

                            if(b != -1 && c != -1)
                            {
                                JOptionPane.showMessageDialog(this, "Record Successfully saved", "Congratulation", JOptionPane.INFORMATION_MESSAGE);
                                location.setText("");
                                desc.setText("");
                                price.setText("");
                                student.setSelectedIndex(0);
                                hostel.setSelectedIndex(0);
                                rent.setValue(12);
                                room.removeAllItems();
                                room.addItem("select room");
                                //last line
                                loadStudent();
                            }
                            else
                                JOptionPane.showMessageDialog(this, "Problem Alloting room", "Problem occur", JOptionPane.WARNING_MESSAGE);
                            
                        } catch (SQLException ex) {
                            Logger.getLogger(Room.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    else
                        //select a room of your choice
                        JOptionPane.showMessageDialog(this, "Select a room of your choice");
                }
                else
                    //select an hostel
                    JOptionPane.showMessageDialog(this, "Select an hostel");
            }
            else
                //select a student to allot room
                JOptionPane.showMessageDialog(this, "Select a student to allot room");
            
        }
        else if(evt.getSource() == reset)
        {
            location.setText("");
            desc.setText("");
            price.setText("");
            student.setSelectedIndex(0);
            hostel.setSelectedIndex(0);
            rent.setValue(12);
            room.removeAllItems();
            room.addItem("select room");
        }
    }//GEN-LAST:event_mouseClicked

    private void mouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseEntered
        // TODO add your handling code here:
        evt.getComponent().setBackground(new Color(204,51,0));
    }//GEN-LAST:event_mouseEntered

    private void mouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseExited
        // TODO add your handling code here:
        evt.getComponent().setBackground(new Color(255,204,153));
    }//GEN-LAST:event_mouseExited

    private void loadStudent()
    {
        try {
            //add details to db
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hostel", "root", "");
            st = con.createStatement();

            rs = st.executeQuery("SELECT student_id FROM room_alloc");
            
            while(rs.next())
                studentId.add(rs.getString(1));
            
            rs = st.executeQuery("SELECT student_id FROM students");
            
            while(rs.next())
            {
                if(!studentId.contains(rs.getString(1)))
                    student.addItem(rs.getString(1));
            }
            
            rs = st.executeQuery("SELECT name FROM hostel");
            
            while(rs.next())
                hostel.addItem(rs.getString(1));
            
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    
    private ArrayList studentId;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel allot;
    private javax.swing.JPanel container;
    private javax.swing.JTextField desc;
    private javax.swing.JComboBox hostel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField location;
    private javax.swing.JLabel passport;
    private javax.swing.JTextField price;
    private javax.swing.JSpinner rent;
    private javax.swing.JLabel reset;
    private javax.swing.JComboBox room;
    private javax.swing.JComboBox student;
    // End of variables declaration//GEN-END:variables
}
